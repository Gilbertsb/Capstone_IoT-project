#include "arduino_secrets.h"
// ESP8266WiFi for esp8266 - Version: Latest 

#include <ESP8266WiFi.h>
#include <SoftwareSerial.h>


/* 
  Sketch generated by the Arduino IoT Cloud Thing "ALU garden Irrigation"
  https://create.arduino.cc/cloud/things/43c3a639-4bad-4ec7-b90d-5b355ebb881c 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  float water;
  CloudLight off_on;
  int moisture_Sensor_1;
  int moisture_Sensor_2;
  bool status;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/


#include "thingProperties.h"

const int Sns1 = A0;
const int relay = 16;
int Sns2 = 4;
int sensor1conv;
float percentvalue;

int var_sens2;
const int moredry =1023;
const int morewet =0;





//D6 = Rx & D5 = Tx
SoftwareSerial nodemcu(D6, D5);


void setup() {
  // Initialize serial and wait for port to open:
  
  pinMode(Sns1,INPUT);
  pinMode(Sns2,INPUT);
  pinMode(relay, OUTPUT);
 
  
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  nodemcu.begin(9600);
  while (!Serial) continue;
  digitalWrite(relay, LOW);
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
  
}

void loop() {
  ArduinoCloud.update();
  // Your code here 
  
  // String flowRate=nodemcu.readStringUntil('\r');
  
  sensor1conv=analogRead(Sns1);
  
  percentvalue = ( 100 - ( (sensor1conv/1023.00) * 100 ) );
  Serial.println(percentvalue);
  Serial.println(digitalRead(Sns2));
   
  if(digitalRead(Sns2)==1){
    var_sens2=0;
  }
  else{
    var_sens2=1;
  }
  
  moisture_Sensor_1=percentvalue;
  
  moisture_Sensor_2=var_sens2;
  
  water = nodemcu.read();
  Serial.println(water);
  Serial.println(off_on);
  
  
  if(percentvalue>=20 && percentvalue<=95){
    
    digitalWrite(relay, LOW);
    Serial.println("Current not Flowing");
    status=false;
    
  }
  else{
    digitalWrite(relay, HIGH);
    Serial.println("Current Flowing");
    status=true;
    
    
    
  }

  if((digitalRead(relay)==1) &&(digitalRead(Sns2)==1)){
    digitalWrite(relay, HIGH);
    Serial.println("Current not Flowing");
    status=true;
  }
  else{
    digitalWrite(relay, LOW);
    Serial.println("Current Flowing");
    status=false;
    
  }
  
  
  }

 

/*
  Since OffOn is READ_WRITE variable, onOffOnChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onOffOnChange()  {
  // Add your code here to act upon OffOn change
  
  if(off_on==1){
    digitalWrite(relay, HIGH);
    status=true;
  }
  else{
    digitalWrite(relay, LOW);
    status=false;
    
  }
}